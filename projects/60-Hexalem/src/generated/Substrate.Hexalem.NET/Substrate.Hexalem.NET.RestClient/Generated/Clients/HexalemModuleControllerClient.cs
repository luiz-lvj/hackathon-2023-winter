//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Hexalem.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet;
   using Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base;
   using Substrate.Hexalem.NET.RestClient.Generated.Interfaces;
   
   public sealed class HexalemModuleControllerClient : BaseClient, IHexalemModuleControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public HexalemModuleControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<Game> GetGameStorage(Arr32U8 key)
      {
         return await SendRequestAsync<Game>(_httpClient, "hexalemmodule/gamestorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.GameStorageParams(key));
      }
      public async Task<bool> SubscribeGameStorage(Arr32U8 key)
      {
         return await _subscriptionClient.SubscribeAsync("HexalemModule.GameStorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.GameStorageParams(key));
      }
      public async Task<HexBoard> GetHexBoardStorage(Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<HexBoard>(_httpClient, "hexalemmodule/hexboardstorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.HexBoardStorageParams(key));
      }
      public async Task<bool> SubscribeHexBoardStorage(Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("HexalemModule.HexBoardStorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.HexBoardStorageParams(key));
      }
      public async Task<Arr16U8> GetTargetGoalStorage(Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<Arr16U8>(_httpClient, "hexalemmodule/targetgoalstorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.TargetGoalStorageParams(key));
      }
      public async Task<bool> SubscribeTargetGoalStorage(Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("HexalemModule.TargetGoalStorage", Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.TargetGoalStorageParams(key));
      }
   }
}
