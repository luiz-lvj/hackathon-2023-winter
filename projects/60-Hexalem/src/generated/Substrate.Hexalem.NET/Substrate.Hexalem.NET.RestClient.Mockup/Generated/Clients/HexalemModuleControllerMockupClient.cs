//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Hexalem.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet;
   using Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base;
   using Substrate.Hexalem.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class HexalemModuleControllerMockupClient : MockupBaseClient, IHexalemModuleControllerMockupClient
   {
      private HttpClient _httpClient;
      public HexalemModuleControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetGameStorage(Game value, Arr32U8 key)
      {
         return await SendMockupRequestAsync(_httpClient, "HexalemModule/GameStorage", value.Encode(), Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.GameStorageParams(key));
      }
      public async Task<bool> SetHexBoardStorage(HexBoard value, Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "HexalemModule/HexBoardStorage", value.Encode(), Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.HexBoardStorageParams(key));
      }
      public async Task<bool> SetTargetGoalStorage(Arr16U8 value, Substrate.Hexalem.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "HexalemModule/TargetGoalStorage", value.Encode(), Substrate.Hexalem.NET.NetApiExt.Generated.Storage.HexalemModuleStorage.TargetGoalStorageParams(key));
      }
   }
}
