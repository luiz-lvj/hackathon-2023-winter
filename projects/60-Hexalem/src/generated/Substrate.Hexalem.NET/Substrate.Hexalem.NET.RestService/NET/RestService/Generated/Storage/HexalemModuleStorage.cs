//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hexalem.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IHexalemModuleStorage interface definition.
    /// </summary>
    public interface IHexalemModuleStorage : IStorage
    {
        
        /// <summary>
        /// >> GameStorage
        /// </summary>
        Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game GetGameStorage(string key);
        
        /// <summary>
        /// >> HexBoardStorage
        /// </summary>
        Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard GetHexBoardStorage(string key);
        
        /// <summary>
        /// >> TargetGoalStorage
        /// </summary>
        Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8 GetTargetGoalStorage(string key);
    }
    
    /// <summary>
    /// HexalemModuleStorage class definition.
    /// </summary>
    public sealed class HexalemModuleStorage : IHexalemModuleStorage
    {
        
        /// <summary>
        /// _gameStorageTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game> _gameStorageTypedStorage;
        
        /// <summary>
        /// _hexBoardStorageTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard> _hexBoardStorageTypedStorage;
        
        /// <summary>
        /// _targetGoalStorageTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8> _targetGoalStorageTypedStorage;
        
        /// <summary>
        /// HexalemModuleStorage constructor.
        /// </summary>
        public HexalemModuleStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.GameStorageTypedStorage = new TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game>("HexalemModule.GameStorage", storageDataProvider, storageChangeDelegates);
            this.HexBoardStorageTypedStorage = new TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard>("HexalemModule.HexBoardStorage", storageDataProvider, storageChangeDelegates);
            this.TargetGoalStorageTypedStorage = new TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8>("HexalemModule.TargetGoalStorage", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _gameStorageTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game> GameStorageTypedStorage
        {
            get
            {
                return _gameStorageTypedStorage;
            }
            set
            {
                _gameStorageTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hexBoardStorageTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard> HexBoardStorageTypedStorage
        {
            get
            {
                return _hexBoardStorageTypedStorage;
            }
            set
            {
                _hexBoardStorageTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _targetGoalStorageTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8> TargetGoalStorageTypedStorage
        {
            get
            {
                return _targetGoalStorageTypedStorage;
            }
            set
            {
                _targetGoalStorageTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await GameStorageTypedStorage.InitializeAsync("HexalemModule", "GameStorage");
            await HexBoardStorageTypedStorage.InitializeAsync("HexalemModule", "HexBoardStorage");
            await TargetGoalStorageTypedStorage.InitializeAsync("HexalemModule", "TargetGoalStorage");
        }
        
        /// <summary>
        /// Implements any storage change for HexalemModule.GameStorage
        /// </summary>
        [StorageChange("HexalemModule", "GameStorage")]
        public void OnUpdateGameStorage(string key, string data)
        {
            GameStorageTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> GameStorage
        /// </summary>
        public Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game GetGameStorage(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (GameStorageTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.Game result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for HexalemModule.HexBoardStorage
        /// </summary>
        [StorageChange("HexalemModule", "HexBoardStorage")]
        public void OnUpdateHexBoardStorage(string key, string data)
        {
            HexBoardStorageTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HexBoardStorage
        /// </summary>
        public Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard GetHexBoardStorage(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HexBoardStorageTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hexalem.NET.NetApiExt.Generated.Model.pallet_hexalem.pallet.HexBoard result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for HexalemModule.TargetGoalStorage
        /// </summary>
        [StorageChange("HexalemModule", "TargetGoalStorage")]
        public void OnUpdateTargetGoalStorage(string key, string data)
        {
            TargetGoalStorageTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> TargetGoalStorage
        /// </summary>
        public Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8 GetTargetGoalStorage(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (TargetGoalStorageTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hexalem.NET.NetApiExt.Generated.Types.Base.Arr16U8 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
